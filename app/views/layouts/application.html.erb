<!DOCTYPE html>
<html>
<head>
  <title>PlayqpidRevise</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
  <%= javascript_include_tag "application", "data-turbo-track": "reload", defer: true %>
</head>

<body>
<p>
  <%= flash[:alert] %>
</p>
<% if authenticated? %>
  <button onclick="onSignOut()">Sign Out</button>
<% end %>
<script>
  function onSignOut() {
    FB.logout()
    console.log('<%= sessions_url %>')
    fetch('<%= sessions_url %>', { method: 'DELETE' }).finally(() => Turbo.visit('<%= root_path %>'))
  }

    function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().
      console.log('statusChangeCallback');
      console.log(response);                   // The current login status of the person.
      if (response.status === 'connected') {   // Logged into your webpage and Facebook.
        testAPI();
      } else {                                 // Not logged into your webpage or we are unable to tell.
        // document.getElementById('status').innerHTML = 'Please log ' +
        //     'into this webpage.';
      }
    }

    function checkLoginState() {               // Called when a person is finished with the Login Button.
      FB.getLoginStatus(function (response) {   // See the onlogin handler
        statusChangeCallback(response);
      });
    }

    window.fbAsyncInit = function () {
      FB.init({
        appId: '189067969939651',
        cookie: true,                     // Enable cookies to allow the server to access the session.
        xfbml: true,                     // Parse social plugins on this webpage.
        version: 'v13.0'           // Use this Graph API version for this call.
      });


      FB.getLoginStatus(function (response) {   // Called after the JS SDK has been initialized.
        statusChangeCallback(response);        // Returns the login status.
      });
    };

    function testAPI() {                      // Testing Graph API after login.  See statusChangeCallback() for when this call is made.
      console.log('Welcome!  Fetching your information.... ');
      FB.api('/me', function (response) {
        console.log('Successful login for: ' + response.name);
        document.getElementById('status').innerHTML =
            'Thanks for logging in, ' + response.name + '!';
      });
    }

    function loginWithFb() {
      FB.login(response => {
        const {authResponse} = response
        if (authResponse) {
          console.log(authResponse);
          FB.api('/me', function (me) {
            console.log({me})
            fetch('<%= sessions_path %>', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                sessions: {
                  provider_name: 'facebook',
                  token: authResponse.accessToken,
                  expired_at: authResponse.data_access_expiration_time,
                  user_id: me.id,
                  name: me.name
                }
              })
            }).then(res => res.json())
                .then(json => Turbo.visit(json.redirect_url)).catch(console.error)
            console.log('Good to see you, ' + response.name + '.');
          });
        } else {
          console.log('User cancelled login or did not fully authorize.');
        }
      }, {scope: 'email,public_profile', return_scopes: true, auth_type: 'reauthorize', enable_profile_selector: true})

    }

</script>
<%= yield %>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/en_US/sdk.js"></script>
</body>
</html>
